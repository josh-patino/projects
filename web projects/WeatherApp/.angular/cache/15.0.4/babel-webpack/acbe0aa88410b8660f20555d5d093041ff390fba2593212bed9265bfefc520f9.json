{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../weather.service\";\nexport class WeatherComponent {\n  constructor(weatherService) {\n    this.weatherService = weatherService;\n    this.temperature = 0;\n    this.feelsLikeTemp = 0;\n    this.humidity = 0;\n    this.pressure = 0;\n    this.windSpeed = 0;\n    this.windGust = 0;\n    this.summary = '';\n    this.iconURL = '';\n    this.city = 'St. Louis';\n    this.units = 'imperial';\n  }\n  ngOnInit() {\n    this.weatherService.getWeather(this.city, this.units).subscribe({\n      next: res => {\n        console.log(res);\n        this.myWeather = res;\n        console.log(this.myWeather);\n        this.temperature = Math.round(this.myWeather.main.temp);\n        this.feelsLikeTemp = Math.round(this.myWeather.main.feels_like);\n        this.humidity = this.myWeather.main.humidity;\n        this.pressure = this.myWeather.main.pressure;\n        this.summary = this.myWeather.weather[0].main;\n        this.iconURL = 'http://openweathermap.org/img/wn/' + this.myWeather.weather[0].icon + '@2x.png';\n        this.windSpeed = Math.round(this.myWeather.wind.speed);\n        this.windGust = Math.round(this.myWeather.wind.gust);\n      },\n      error: error => console.log(error.message),\n      complete: () => console.info('API call completed')\n    });\n  }\n}\nWeatherComponent.ɵfac = function WeatherComponent_Factory(t) {\n  return new (t || WeatherComponent)(i0.ɵɵdirectiveInject(i1.WeatherService));\n};\nWeatherComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: WeatherComponent,\n  selectors: [[\"app-weather\"]],\n  decls: 20,\n  vars: 9,\n  consts: [[1, \"myContainer\"], [1, \"card\", \"text-white\", \"bg-primary\", \"m-5\", 2, \"max-width\", \"18rem\"], [1, \"card-header\"], [\"alt\", \"weather image\", 3, \"src\"], [1, \"card-body\"], [1, \"card-title\"], [1, \"card-text\"]],\n  template: function WeatherComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h2\");\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"p\");\n      i0.ɵɵelement(6, \"img\", 3);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\", 4)(8, \"h5\", 5);\n      i0.ɵɵtext(9, \"Current Outlook:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"p\", 6);\n      i0.ɵɵtext(11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"p\", 6);\n      i0.ɵɵtext(13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"p\", 6);\n      i0.ɵɵtext(15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"p\", 6);\n      i0.ɵɵtext(17);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"p\", 6);\n      i0.ɵɵtext(19);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(ctx.city);\n      i0.ɵɵadvance(2);\n      i0.ɵɵpropertyInterpolate(\"src\", ctx.iconURL, i0.ɵɵsanitizeUrl);\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate1(\"What's Outside: \", ctx.summary, \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate2(\"Temperature: \\u00B0\", ctx.temperature, \", Feels Like: \\u00B0\", ctx.feelsLikeTemp, \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate2(\"Current Wind Speed: \", ctx.windSpeed, \" MPH, Current Wind Gusts: \", ctx.windGust, \" MPH \");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"Pressure: \", ctx.pressure, \" hPa\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"Humidity: \", ctx.humidity, \" %\");\n    }\n  },\n  styles: [\".myContainer[_ngcontent-%COMP%] {\\n    display: grid;\\n    flex-direction: column;\\n    align-items: center;\\n    flex-grow: 3;\\n}\\n.card-header[_ngcontent-%COMP%] {\\n    text-align: center; \\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvd2VhdGhlci93ZWF0aGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLG1CQUFtQjtJQUNuQixZQUFZO0FBQ2hCO0FBQ0E7SUFDSSxrQkFBa0I7QUFDdEIiLCJzb3VyY2VzQ29udGVudCI6WyIubXlDb250YWluZXIge1xuICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGZsZXgtZ3JvdzogMztcbn1cbi5jYXJkLWhlYWRlciB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyOyBcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,gBAAgB;EAC3BC,YAAoBC,cAA8B;IAA9B,mBAAc,GAAdA,cAAc;IAGpC,gBAAW,GAAW,CAAC;IACvB,kBAAa,GAAW,CAAC;IACzB,aAAQ,GAAW,CAAC;IACpB,aAAQ,GAAW,CAAC;IACpB,cAAS,GAAU,CAAC;IACpB,aAAQ,GAAW,CAAC;IACpB,YAAO,GAAW,EAAE;IACpB,YAAO,GAAW,EAAE;IACpB,SAAI,GAAW,WAAW;IAC1B,UAAK,GAAW,UAAU;EAZ4B;EAcpDC,QAAQ;IACN,IAAI,CAACD,cAAc,CAACE,UAAU,CAAC,IAAI,CAACC,IAAI,EAAE,IAAI,CAACC,KAAK,CAAC,CAACC,SAAS,CAAC;MAC9DC,IAAI,EAAEC,GAAG,IAAG;QACVC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;QAChB,IAAI,CAACG,SAAS,GAAGH,GAAG;QACpBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,SAAS,CAAC;QAC3B,IAAI,CAACC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAAC,IAAI,CAACH,SAAS,CAACI,IAAI,CAACC,IAAI,CAAC;QACvD,IAAI,CAACC,aAAa,GAACJ,IAAI,CAACC,KAAK,CAAC,IAAI,CAACH,SAAS,CAACI,IAAI,CAACG,UAAU,CAAC;QAC7D,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACR,SAAS,CAACI,IAAI,CAACI,QAAQ;QAC5C,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACT,SAAS,CAACI,IAAI,CAACK,QAAQ;QAC5C,IAAI,CAACC,OAAO,GAAG,IAAI,CAACV,SAAS,CAACW,OAAO,CAAC,CAAC,CAAC,CAACP,IAAI;QAC7C,IAAI,CAACQ,OAAO,GAAG,mCAAmC,GAAG,IAAI,CAACZ,SAAS,CAACW,OAAO,CAAC,CAAC,CAAC,CAACE,IAAI,GAAC,SAAS;QAC7F,IAAI,CAACC,SAAS,GAAGZ,IAAI,CAACC,KAAK,CAAC,IAAI,CAACH,SAAS,CAACe,IAAI,CAACC,KAAK,CAAC;QACtD,IAAI,CAACC,QAAQ,GAAGf,IAAI,CAACC,KAAK,CAAC,IAAI,CAACH,SAAS,CAACe,IAAI,CAACG,IAAI,CAAC;MACtD,CAAC;MACDC,KAAK,EAAGA,KAAK,IAAKrB,OAAO,CAACC,GAAG,CAACoB,KAAK,CAACC,OAAO,CAAC;MAC5CC,QAAQ,EAAC,MAAMvB,OAAO,CAACwB,IAAI,CAAC,oBAAoB;KACjD,CAAC;EACJ;;AAjCWlC,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAAmC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCR7BC,8BAAyB;MAGLA,YAAQ;MAAAA,iBAAK;MACjBA,yBAAG;MAAAA,yBAA2C;MAAAA,iBAAI;MAG1DA,8BAAuB;MACEA,gCAAgB;MAAAA,iBAAK;MAC5CA,6BAAqB;MAAAA,aAA2B;MAAAA,iBAAI;MACpDA,6BAAqB;MAAAA,aAA6D;MAAAA,iBAAI;MACtFA,6BAAqB;MAAAA,aAA4E;MAAAA,iBAAI;MACrGA,6BAAqB;MAAAA,aAA0B;MAAAA,iBAAI;MACnDA,6BAAqB;MAAAA,aAAwB;MAAAA,iBAAI;;;MAVvCA,eAAQ;MAARA,8BAAQ;MACJA,eAAiB;MAAjBA,8DAAiB;MAKVA,eAA2B;MAA3BA,0DAA2B;MAC3BA,eAA6D;MAA7DA,4GAA6D;MAC7DA,eAA4E;MAA5EA,iHAA4E;MAC5EA,eAA0B;MAA1BA,yDAA0B;MAC1BA,eAAwB;MAAxBA,uDAAwB","names":["WeatherComponent","constructor","weatherService","ngOnInit","getWeather","city","units","subscribe","next","res","console","log","myWeather","temperature","Math","round","main","temp","feelsLikeTemp","feels_like","humidity","pressure","summary","weather","iconURL","icon","windSpeed","wind","speed","windGust","gust","error","message","complete","info","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["/Users/joshuapatino/Desktop/projects/projects/web projects/WeatherApp/src/app/weather/weather.component.ts","/Users/joshuapatino/Desktop/projects/projects/web projects/WeatherApp/src/app/weather/weather.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { WeatherService } from '../weather.service';\n\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.css']\n})\nexport class WeatherComponent implements OnInit {\n  constructor(private weatherService: WeatherService){}\n  //vars\nmyWeather: any; \ntemperature: number = 0;\nfeelsLikeTemp: number = 0;\nhumidity: number = 0;\npressure: number = 0;\nwindSpeed:number = 0;\nwindGust: number = 0\nsummary: string = '';\niconURL: string = '';\ncity: string = 'St. Louis';\nunits: string = 'imperial'; \n\n  ngOnInit(): void {\n    this.weatherService.getWeather(this.city, this.units).subscribe({\n      next:(res)=> { //error block, spit out data if we get anything\n        console.log(res)\n        this.myWeather = res; \n        console.log(this.myWeather)\n        this.temperature = Math.round(this.myWeather.main.temp);\n        this.feelsLikeTemp=Math.round(this.myWeather.main.feels_like);\n        this.humidity = this.myWeather.main.humidity;\n        this.pressure = this.myWeather.main.pressure;\n        this.summary = this.myWeather.weather[0].main;  \n        this.iconURL = 'http://openweathermap.org/img/wn/' + this.myWeather.weather[0].icon+'@2x.png';\n        this.windSpeed = Math.round(this.myWeather.wind.speed);\n        this.windGust = Math.round(this.myWeather.wind.gust); \n      },\n      error: (error) => console.log(error.message), // \n      complete:() => console.info('API call completed')\n    })\n  }\n}\n","<div class=\"myContainer\">\n    <div class=\"card text-white bg-primary m-5\" style=\"max-width: 18rem;\">\n        <div class=\"card-header\">\n                <h2>{{city}}</h2>\n                <p><img src=\"{{iconURL}}\" alt=\"weather image\"></p>\n\n        </div>\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">Current Outlook:</h5>\n          <p class=\"card-text\">What's Outside: {{summary}}</p> \n          <p class=\"card-text\">Temperature: °{{temperature}}, Feels Like: °{{feelsLikeTemp}}</p>\n          <p class=\"card-text\">Current Wind Speed: {{windSpeed}} MPH, Current Wind Gusts: {{windGust}} MPH </p>\n          <p class=\"card-text\">Pressure: {{pressure}} hPa</p>\n          <p class=\"card-text\">Humidity: {{humidity}} %</p>\n        </div>\n      </div>\n    \n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}