{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../weather.service\";\nimport * as i2 from \"@angular/forms\";\nexport class WeatherComponent {\n  constructor(weatherService) {\n    this.weatherService = weatherService;\n    this.temperature = 0;\n    this.feelsLikeTemp = 0;\n    this.humidity = 0;\n    this.pressure = 0;\n    this.windSpeed = 0;\n    this.windGust = 0;\n    this.summary = '';\n    this.iconURL = '';\n    this.cityName = '';\n    this.city = 'St. Louis';\n    this.units = 'imperial';\n  }\n  ngOnInit() {\n    this.getWeatherData(this.city);\n  }\n  onSubmit() {\n    this.getWeatherData(this.city);\n    this.city = '';\n  }\n  getWeatherData(city) {\n    this.weatherService.getWeather(this.city, this.units).subscribe({\n      next: res => {\n        console.log(res);\n        this.myWeather = res;\n        console.log(this.myWeather);\n        this.cityName = this.myWeather.name;\n        this.temperature = Math.round(this.myWeather.main.temp);\n        this.feelsLikeTemp = Math.round(this.myWeather.main.feels_like);\n        this.humidity = this.myWeather.main.humidity;\n        this.pressure = this.myWeather.main.pressure;\n        this.summary = this.myWeather.weather[0].main;\n        this.iconURL = 'http://openweathermap.org/img/wn/' + this.myWeather.weather[0].icon + '@2x.png';\n        this.windSpeed = Math.round(this.myWeather.wind.speed);\n        this.windGust = Math.round(this.myWeather.wind.gust);\n      },\n      error: error => console.log(error.message),\n      complete: () => console.info('API call completed')\n    });\n  }\n}\nWeatherComponent.ɵfac = function WeatherComponent_Factory(t) {\n  return new (t || WeatherComponent)(i0.ɵɵdirectiveInject(i1.WeatherService));\n};\nWeatherComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: WeatherComponent,\n  selectors: [[\"app-weather\"]],\n  decls: 24,\n  vars: 10,\n  consts: [[1, \"searchButton\"], [3, \"submit\"], [\"form\", \"ngForm\"], [\"type\", \"text\", \"placeholder\", \"Search City\", \"name\", \"city\", 3, \"ngModel\", \"ngModelChange\"], [1, \"myContainer\"], [1, \"card\", \"text-white\", \"bg-secondary\", \"m-5\", 2, \"max-width\", \"50rem\"], [1, \"card-header\"], [\"alt\", \"weather image\", 3, \"src\"], [1, \"card-body\"], [1, \"card-title\"], [1, \"card-text\"]],\n  template: function WeatherComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1, 2);\n      i0.ɵɵlistener(\"submit\", function WeatherComponent_Template_form_submit_1_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(3, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function WeatherComponent_Template_input_ngModelChange_3_listener($event) {\n        return ctx.city = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(4, \"div\", 4)(5, \"div\", 5)(6, \"div\", 6)(7, \"h2\");\n      i0.ɵɵtext(8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"p\");\n      i0.ɵɵelement(10, \"img\", 7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"div\", 8)(12, \"h5\", 9);\n      i0.ɵɵtext(13, \"Current Outlook:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"p\", 10);\n      i0.ɵɵtext(15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"p\", 10);\n      i0.ɵɵtext(17);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"p\", 10);\n      i0.ɵɵtext(19);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"p\", 10);\n      i0.ɵɵtext(21);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"p\", 10);\n      i0.ɵɵtext(23);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.city);\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate(ctx.cityName);\n      i0.ɵɵadvance(2);\n      i0.ɵɵpropertyInterpolate(\"src\", ctx.iconURL, i0.ɵɵsanitizeUrl);\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate1(\"What's Outside: \", ctx.summary, \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate2(\"The Temperature is \\u00B0\", ctx.temperature, \" and feels Like \\u00B0\", ctx.feelsLikeTemp, \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate2(\"Current Wind Speed: \", ctx.windSpeed, \" MPH, Current Wind Gusts: \", ctx.windGust, \" MPH \");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"Pressure: \", ctx.pressure, \" hPa\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"Humidity: \", ctx.humidity, \"%\");\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgModel, i2.NgForm],\n  styles: [\".myContainer[_ngcontent-%COMP%] {\\n    width:100%;\\n    height: 100vh;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    width: 400px;\\n    height: 500px;\\n}\\n.card-header[_ngcontent-%COMP%] {\\n    text-align: center; \\n}\\n\\n.card-title[_ngcontent-%COMP%] {\\n    text-align: center;\\n}\\n\\n.card-text[_ngcontent-%COMP%] {\\n    text-align: center;\\n}\\n\\n.searchButton[_ngcontent-%COMP%] {\\n    margin-top: 100px;\\n    text-align: center;\\n}\\n\\n.searchButton[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n    background-color: grey;\\n    outline: none;\\n    border: none;\\n    border-radius: 10px;\\n    padding: 1em;\\n    color: white;\\n    font-size: 0.8em;\\n    text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvd2VhdGhlci93ZWF0aGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxVQUFVO0lBQ1YsYUFBYTtJQUNiLGFBQWE7SUFDYix1QkFBdUI7SUFDdkIsbUJBQW1CO0lBQ25CLFlBQVk7SUFDWixhQUFhO0FBQ2pCO0FBQ0E7SUFDSSxrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxpQkFBaUI7SUFDakIsa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksc0JBQXNCO0lBQ3RCLGFBQWE7SUFDYixZQUFZO0lBQ1osbUJBQW1CO0lBQ25CLFlBQVk7SUFDWixZQUFZO0lBQ1osZ0JBQWdCO0lBQ2hCLGtCQUFrQjtBQUN0QiIsInNvdXJjZXNDb250ZW50IjpbIi5teUNvbnRhaW5lciB7XG4gICAgd2lkdGg6MTAwJTtcbiAgICBoZWlnaHQ6IDEwMHZoO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICB3aWR0aDogNDAwcHg7XG4gICAgaGVpZ2h0OiA1MDBweDtcbn1cbi5jYXJkLWhlYWRlciB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyOyBcbn1cblxuLmNhcmQtdGl0bGUge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLmNhcmQtdGV4dCB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uc2VhcmNoQnV0dG9uIHtcbiAgICBtYXJnaW4tdG9wOiAxMDBweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5zZWFyY2hCdXR0b24gaW5wdXQge1xuICAgIGJhY2tncm91bmQtY29sb3I6IGdyZXk7XG4gICAgb3V0bGluZTogbm9uZTtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgICBwYWRkaW5nOiAxZW07XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIGZvbnQtc2l6ZTogMC44ZW07XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["WeatherComponent","constructor","weatherService","ngOnInit","getWeatherData","city","onSubmit","getWeather","units","subscribe","next","res","console","log","myWeather","cityName","name","temperature","Math","round","main","temp","feelsLikeTemp","feels_like","humidity","pressure","summary","weather","iconURL","icon","windSpeed","wind","speed","windGust","gust","error","message","complete","info","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/joshuapatino/Desktop/projects/projects/web projects/WeatherApp/src/app/weather/weather.component.ts","/Users/joshuapatino/Desktop/projects/projects/web projects/WeatherApp/src/app/weather/weather.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { WeatherService } from '../weather.service';\n\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.css']\n})\nexport class WeatherComponent implements OnInit {\n  constructor(private weatherService: WeatherService){}\n  //vars\nmyWeather: any; \ntemperature: number = 0;\nfeelsLikeTemp: number = 0;\nhumidity: number = 0;\npressure: number = 0;\nwindSpeed:number = 0;\nwindGust: number = 0\nsummary: string = '';\niconURL: string = '';\ncityName: string = '';\ncity: string = 'St. Louis';\nunits: string = 'imperial'; \n\n  ngOnInit(): void {\n    this.getWeatherData(this.city);\n\n  }\n  onSubmit(){\n    this.getWeatherData(this.city);\n    this.city = '';\n  }\n  private getWeatherData(city: string) {\n    this.weatherService.getWeather(this.city, this.units).subscribe({\n      next:(res)=> { //error block, spit out data if we get anything\n        console.log(res)\n        this.myWeather = res; \n        console.log(this.myWeather)\n        this.cityName = this.myWeather.name;\n        this.temperature = Math.round(this.myWeather.main.temp);\n        this.feelsLikeTemp=Math.round(this.myWeather.main.feels_like);\n        this.humidity = this.myWeather.main.humidity;\n        this.pressure = this.myWeather.main.pressure;\n        this.summary = this.myWeather.weather[0].main;  \n        this.iconURL = 'http://openweathermap.org/img/wn/' + this.myWeather.weather[0].icon+'@2x.png';\n        this.windSpeed = Math.round(this.myWeather.wind.speed);\n        this.windGust = Math.round(this.myWeather.wind.gust); \n      },\n      error: (error) => console.log(error.message), // \n      complete:() => console.info('API call completed')\n    })\n  }\n}\n","<div class=\"searchButton\">\n    <form #form=\"ngForm\" (submit)=\"onSubmit()\">\n    <input type = \"text\" placeholder=\"Search City\" name=\"city\"[(ngModel)]=\"city\">\n</form>\n</div>\n\n<div class=\"myContainer\">\n    <div class=\"card text-white bg-secondary m-5\" style=\"max-width: 50rem;\">\n        <div class=\"card-header\">\n                <h2>{{cityName}}</h2>\n                <p><img src=\"{{iconURL}}\" alt=\"weather image\"></p>\n\n        </div>\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">Current Outlook:</h5>\n          <p class=\"card-text\">What's Outside: {{summary}}</p> \n          <p class=\"card-text\">The Temperature is  °{{temperature}} and  feels Like °{{feelsLikeTemp}}</p>\n          <p class=\"card-text\">Current Wind Speed: {{windSpeed}} MPH, Current Wind Gusts: {{windGust}} MPH </p>\n          <p class=\"card-text\">Pressure: {{pressure}} hPa</p>\n          <p class=\"card-text\">Humidity: {{humidity}}%</p>\n        </div>\n      </div>\n    \n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}